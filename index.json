[{"uri":"https://reliabilityengineering.io/resources/","title":"Resources","tags":[],"description":"","content":"Want to add something? Make a PR.\nWant to remove something? Make a PR!\nThings we intentionally leave out Chat Twitter Vendor supplied material Overly biased material Books Site Reliability Engineering: How Google Runs Production Systems The Site Reliability Workbook: Practical Ways to Implement SRE The Practice Of Cloud System Administration: Designing and Operating Large Distributed Systems Web Operations - Keeping the Data On Time The Checklist Manifesto: How to Get Things Right Microservices in Production - Standard Principles and Requirements Production-Ready Microservices - Building Standardized Systems Across an Engineering Organization Systems Performance: Enterprise and the Cloud [Sample chapter titled CPUs] Monitoring Distributed Systems: Case Studies from Google\u0026rsquo;s SRE Teams The Human Side of Postmortems: Managing Stress and Cognitive Biases Chaos Engineering: Building Confidence in System Behavior through Experiment Post-Incident Reviews: Learning from Failure for Improved Incident Responses Antifragile Systems and Teams How to Monitoring the SRE Golden Signals (E-Book) Incident Management for Operations Distributed Systems Observability Real-World SRE Seeking SRE Organization and Culture Rakyll on the SRE model Education From Zero to Hero: Recommended Practices for Training your Ever-Evolving SRE Teams The Systems Engineering Side of Site Reliability Engineering Incident Management Training: Wheel of Misfortune Hiring SRE Hiring Reliability Google: A Collection Of Best Practices For Production Services Canary Analysis Service Tips for High Availability Progressive Service Architecture At Auth0 Designing reliable systems with cloud infrastructure (Google Cloud Next \u0026lsquo;17) Monitoring and Alerting The Many Ways Your Monitoring Is Lying to You Debugging Latency in Go 1.11 Monitoring in the time of Cloud Native Monitoring Isn\u0026rsquo;t Observability How to Monitor the SRE Golden Signals Why Percentiles Don’t Work the Way you Think The 4 Golden Signals of API Health and Performance in Cloud-Native Applications On-Call PagerDuty Incident Response Handbook How to write a status page update Sustainable On-Call Moving Past Shallow Incident Data Understanding The Role Of The Incident Manager On-Call (IMOC) The On-Call Handbook Being an On-Call Engineer: A Google SRE Perspective Post-Mortem A collection of post-mortems Blameless PostMortems and a Just Culture Postmortem Action Items: Plan the Work and Work the Plan How to write an Incident Report / Postmortem Capacity Planning Capacity Planning SouthBay SRE: Cloud Capacity Planning SLO\u0026rsquo;s, SLA\u0026rsquo;s, and SLI\u0026rsquo;s SRE fundamentals: SLIs, SLAs and SLOs Understanding error budget overspend - part one - CRE life lessons Good housekeeping for error budgets - part two - CRE life lessons Performance Performance Checklists for SREs Software Performance Analysis Guided By SLOs Programming Go Language for Ops and Site Reliability Engineering Go for SREs using Python Operability in Go Go Reliability and Durability at Dropbox Blogs Brendan Gregg\u0026rsquo;s Blog - Highly Techincal Blog Posts About Systems Internals, Performance and SRE. Everything Sysadmin - Blog Posts About SysAdmin/DevOps/SRE by Tom Limoncelli. High Scalability - Technical Blog Posts About Systems Architecture. rachelbythebay - Techincal Blog Posts. SRE Weekly - Weekly Site Reliability Newsletter. Production Ready - A mailing list about building resilient infrastructure and tools. Susan J. Fowler - Various blog posts about SRE, Software Engineering and Microservices. SysAdvent - One article for each day of December, ending on the 25th article. Operations for Developers - A collection of resources for developers to strengthen their Ops skills. Stephen Thorne\u0026rsquo;s Blog - Blog Posts About SRE Increment - A digital magazine about how teams build and operate software systems at scale. O’Reilly Systems Engineering and Operations Newsletter - Weekly systems engineering and operations news and insights from industry insiders. GopherSRE - Blog Posts about Go and SRE. Conferences \u0026amp; Meetups SRECon Conferences - The Official SRE Conference. LISA Conferences - Prominent Conference About SysAdmin/DevOps/SRE. SRE Tech Talks - SRE Talks Hosted by Google. South Bay Site Reliability Engineering (Sunnyvale, CA) Meetup - A Group For Individuals Who Tackle Reliability Challenges For Web-Scale Systems. San Francisco Reliability Engineering - A Group Of People Who Are Passionate About Reliable, Performant Software Systems. Front Range Site Reliability Engineering - SRE Meetup in Boulder/Denver/Golden/DTC/FoCo area. Site Reliability Engineering Munich, Germany - SRE Meetup in the greater area of Oktoberfest city. Sources Credit:\nawesome-sre "},{"uri":"https://reliabilityengineering.io/code-of-conduct/","title":"Code of Conduct","tags":[],"description":"","content":"Our Pledge In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.\nOur Standards Examples of behavior that contributes to creating a positive environment include:\nUsing welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include:\nThe use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others\u0026rsquo; private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Our Responsibilities Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\nScope This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\nEnforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at matthew.ouille@gmail.com. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project\u0026rsquo;s leadership.\nAttribution This Code of Conduct is adapted from the Contributor Covenant, version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\nFor answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq\n"},{"uri":"https://reliabilityengineering.io/press-kit/","title":"Press Kit","tags":[],"description":"","content":"The following are authorized logos\nLogos dfw-sre_color.svg (159 KB) dfw-sre_white.svg (159 KB) The logos use Source Code Pro as their font.\n"},{"uri":"https://reliabilityengineering.io/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"https://reliabilityengineering.io/","title":"Home","tags":[],"description":"","content":"Welcome to the home of the Dallas Fort Worth Site Reliability Engineering meetup group.\nGoals Proliferate the adoption of SRE in a healthy way Act as an educational resource Who we are We are a group of like-minded engineers from systems engineering (SE) and software engineering (SWE) backgrounds who enjoy sharing and gaining knowledge together. We\u0026rsquo;re a meetup focused on both the cultural and technical aspects of SRE.\nWhere? We currently meet at The Home Depot on the first Wednesday of every month, minus January and February. See our Meetup page for details. You can also join us on Slack here! Submit your email address here for an invite!\nNew to SRE? Firstly, welcome! The SRE community is quite small but is a community of growing influence. SRE is very similar to practices such as Production Engineering at Facebook and it\u0026rsquo;s implementations vary by organization. While there is no one way to do SRE, the core tenants are what really define the role and practice.\nBe sure to check out our resources page.\n"},{"uri":"https://reliabilityengineering.io/tags/","title":"Tags","tags":[],"description":"","content":""}]